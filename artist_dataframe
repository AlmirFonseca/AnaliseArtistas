# Importa as bibliotecas necessárias 
import deezer
import pandas as pd
import time


# Recebe o nome de um artista ou banda e retorna seus dados extraídos da plataforma Deezer
def artist_info(searched_artist):
    client = deezer.Client() #Sincroniza com a plataforma 
    artist = client.search_artists(searched_artist)[0] #Retorna o primeiro resultado para o artista pesquisado
    artist_name = artist.name
    artist_nb_album = artist.nb_album
    artist_nb_fans = artist.nb_fan
    artist_albums = artist.get_albums()
    return artist_name,artist_nb_album,artist_nb_fans,artist_albums

# Recebe um álbum e retorna os seus gêneros em formato de string
def genres(album): 
    album_genres_list = []
    album_genres=album.genres
    for genre in album_genres:
        album_genres_list.append(genre.name)
    album_genres_str = "/".join(album_genres_list)
    return album_genres_str
    
# Recebe um álbum e retorna seus dados extraídos da plataforma Deezer
def album_info(albums):
    for album in albums:
        album_title = album.title
        album_genres = genres(album)
        album_nb_tracks = album.nb_tracks
        album_fans = album.fans
        album_release_date = album.release_date.strftime("%d/%m/%Y")
        album_tracks = album.tracks
    return album_title,album_genres,album_nb_tracks,album_fans,album_release_date,album_tracks
    
 
# Recebe faixas e retorna os dados de cada uma extraídos da plataforma Deezer
def tracks_info(album_tracks):
    for track in album_tracks:
        track_title = track.title
        track_duration = time.strftime("%M:%S", time.gmtime(track.duration))
        track_position = track.track_position
        track_disk_number = track.disk_number
        track_explicit_lyrics = track.explicit_lyrics
        track_gain = track.gain
        track_contributors = track.contributors
    return track_title,track_duration,track_position,track_disk_number,track_explicit_lyrics,track_gain,track_contributors


